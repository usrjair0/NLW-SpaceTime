*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root{
  font-size: 16px; 
  /*fonte padrão utilizada por todo arquivo, todos os calculos de fonte vão ser com base nela, por exemplo 12 px são 0,75rem*/
}
::-webkit-scrollbar {
  width: 8px;
}
::-webkit-scrollbar-track {
  background-color: #2c2c31;
}
::-webkit-scrollbar-thumb {
  background-color: #9e9ea0;
}

@keyframes entering {
  /* posso usar porcentagens como 0% { opacity: 0; } */
  from { 
    opacity: 0;
    scale: 0.4;
    transform: translateY(-200px);
  }
  to {
    opacity: 1;
    scale: 1.0;
    transform: translateY(0px);
  }
}

body {
  background-color: #121215;
  color: #EAEAEa;
  font-family: 'Roboto', sans-serif;

  display: grid;
  grid-template-areas: "profile timeline";
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 100vh;
}
nav {
  padding: 64px;
  grid-area: timeline;

  overflow-y:scroll;
  animation: entering 3s ease-in-out;
}
nav p {
  text-align: justify;
}
.memory {
  display: flex;
  flex-direction: column;/* vão se comportar um abaixo do outro*/
  gap: 16px; /* espaçamento entre parágrafos*/
  text-decoration: none; /* retirar os sublinhados que ficaram após eu inserir um "a" no lugar do div do body*/
  margin-bottom: 45px;
}
/*esse small significa que não estou modificando qualquer small e sim o small da classe momory*/
.memory small { 
  color: #BEBEBF;
  font-size: 0,75rem;
}
.memory h1 {
  font-size: 2rem;
  color: #EAEAEa;
}
.memory img {
  width: 100%; /* dessa forma sempre cobrirá 100% da largura*/
  height: 280px;
  object-fit: cover; /*o cover vai fazer com que independente do tamanho da tela a imagem sempre cubra da forma que deve cobrir*/
  border-radius: 8px;
  transition: transform 0.3s ease-in-out; /*o ease in out diz que a transformação de 0.3 seconds será na ida e na saida*/
}
/*quando o mouse passar na memória algo acontece*/
.memory:hover img{
  transform: scale(1.1);
}
.memory div{
  width: 100%; 
  height: 280px;
  overflow: hidden; /*isso faz que qualquer coisa que passar das dimensões dadas fique hidden*/
  border-radius: 8px;
}
.memory p {
  font-size: 1.2rem;
  color: #bebebf;
  line-height: 28px;
}
aside {
  grid-area: profile;
  display: flex;
  flex-direction: column;
  align-items: center; /*itens aliados ao centro*/
  justify-content: center;/*conteúdo aliados ao centro*/
  gap: 20px;
  
  border-right: 1px solid;
  border-image: linear-gradient(#727275, #2c2c31) 1;
  /*o 1 significa o opacidade aqui estou fazendo um gradiente indo de um tom cinza pra um tom mais preto*/
  
  background-image: url("./assets/background.svg");
  background-position: top right;
  background-repeat: no-repeat;  /*elimina o tracinho que fica no fim da imagem*/
  background-size: auto 100%;
}
aside *{
    animation: entering 3s ease-in-out;
    /*aqui está incluso todo aside tirando o background*/
}

aside img:nth-child(2) {
  /*o nth-child(2) indica que estou pegando o segundo elemento img*/
  width: 160px;
  height: 160px;
  border-radius: 50%;
  border: 4px solid transparent;
  background: linear-gradient(#d39e33, #ed5636, #633bbc) padding-box, linear-gradient(260deg, #d39e33, #ed5636, #633bbc) border-box;
}
aside p {
  font-size: 2rem;
  text-align: center;
}
aside span {
  font-size: 0.75rem;
  color: #9e9ea0;
}
@media (max-width: 768px){ 
  /*quando a largura máxima da tela for de 768 px ele vai fazer algumas modificações na página*/
  :root {
    font-size: 12px;   /*todas as font-size ficam menores*/
  }
  body {
    grid-template-columns: 1fr ;
    grid-template-rows: 0.2fr 0.8fr;
    grid-template-areas: 
    "profile"
    "timeline";
  }
  aside {
    border: none;
    padding: 25px 12px;
  }
  nav {
    overflow-y: visible;
    padding: 25px;
  }
}